{"version":3,"sources":["Components/Button/Button.jsx","AppComponents/Header/AppHeader.jsx","AppComponents/Footer/AppFooter.jsx","Components/RotatingCube/RotatingCube.jsx","Pages/Home.jsx","Pages/Arts.jsx","Pages/Projects.jsx","Pages/NotFound.jsx","AppComponents/App.jsx","index.js","Styles/App.module.css"],"names":["buttonType","params","undefined","IsIcon","className","onClick","onclick","text","Button","RenderButton","navigate","useNavigate","event","a","preventDefault","replace","GetBreadcrumbStyle","lastcrumb","color","Pallete","hightlight","RenderBreadcrumbButton","pathnames","useLocation","pathname","split","filter","x","map","name","index","size","isLastcrumb","length","style","goTo","slice","join","AppHeader","styles","AppFooter","Point3D","b","c","y","z","Speed","CubeX","CubeY","CubeZ","CubeSize","DeltaTime","LastTime","CubeHeight","CubeWidth","ctx","Vertices","Edges","loop","currentTime","fillRect","angle","Math","PI","cubeVertice","dx","dy","nx","cos","sin","ny","dz","nz","edge","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","RotatingCube","canvas","useRef","useEffect","canvasEle","current","width","clientWidth","height","clientHeight","getContext","fillStyle","background","strokeStyle","appYellow","lineWidth","linecap","display","position","ref","Home","Arts","Projects","NotFound","App","AppContainer","path","exact","element","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4b4c7acb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst buttonType = (params) =>{\r\n    if(params.IsIcon !== undefined && params.IsIcon){\r\n        return(\r\n            <div></div>\r\n        )\r\n    }else{\r\n        return (\r\n            <span className='buttonText' onClick={params.onclick}>\r\n                {params.text}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nconst Button = (params) => {\r\n    return (\r\n        <div className='Button'>\r\n            {buttonType(params)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Button from \"../../Components/Button/Button\";\r\nimport styles from '../../Styles/App.module.css';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Pallete from '../../Styles/Pallete.json';\r\nimport './AppHeader.css';\r\n\r\nconst RenderButton = (text) =>{\r\n    let navigate = useNavigate();\r\n    return (\r\n        <Button \r\n            text = {text}\r\n            onclick = {\r\n                async (event)=>{\r\n                    event.preventDefault();\r\n                    navigate(('../'+text), { replace: true });\r\n                }\r\n            } \r\n        />\r\n    )\r\n}\r\n\r\nconst isLastcrumb = (index, size) =>{\r\n    return ((size === 0) || ((index+1) >= size))\r\n}\r\n\r\nconst GetBreadcrumbStyle = (lastcrumb) => {\r\n    if(lastcrumb){\r\n        return {\r\n            color: Pallete.hightlight\r\n        }\r\n    }\r\n}\r\n\r\nconst RenderBreadcrumbButton = () => {\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n    let {pathname} = location;\r\n    var pathnames = pathname.split('/').filter(x => x);\r\n    return(\r\n        <div className='AppHeaderBreadcrumb'>\r\n            <span onClick={ \r\n                async (event)=>{\r\n                event.preventDefault();\r\n                navigate(('/'), { replace: true });\r\n            }}>\r\n                Home\r\n            </span>\r\n            {\r\n                pathnames.map((name, index) =>{\r\n                    var lastcrumb = isLastcrumb(index, pathnames.length);\r\n                    return(\r\n                        <span key = {index}>\r\n                            {' > '}\r\n                            <span \r\n                                style={GetBreadcrumbStyle(lastcrumb)}\r\n                                onClick={ async (event)=>{\r\n                                    event.preventDefault();\r\n                                    if(!lastcrumb){\r\n                                        var goTo = pathnames.slice(0,index+1).join('/');\r\n                                        navigate((goTo), { replace: true });\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {name}\r\n                            </span>\r\n                        </span>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <div className={styles.AppHeader}>\r\n            <div className='AppHeaderMenu'>\r\n                {RenderButton('Projects')}\r\n                {RenderButton('Arts')}\r\n                {RenderButton('About')}\r\n            </div>\r\n            <RenderBreadcrumbButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport styles from '../../Styles/App.module.css';\r\n\r\nconst AppFooter = () => {\r\n    return (\r\n        <div className={styles.AppFooter}>\r\n            <p>Footer</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppFooter;","import React, { useRef, useEffect } from 'react';\r\nimport Pallete from '../../Styles/Pallete.json';\r\nimport './RotatingCube.css';\r\n\r\nconst Point3D = (a,b,c) => {\r\n    return ({\r\n        x: a,\r\n        y: b,\r\n        z: c\r\n    })\r\n};\r\n\r\nconst GetRotatingCubeStyle = () => {\r\n    return {\r\n        display: 'block',\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%'\r\n    }\r\n};\r\n\r\nconst Speed = Point3D(0.005, 0.01, 0.015);\r\n\r\nvar CubeX      = 0;\r\nvar CubeY      = 0;\r\nvar CubeZ      = 0;\r\nvar CubeSize   = 0;\r\nvar DeltaTime  = 0;\r\nvar LastTime   = 0;\r\nvar CubeHeight = 0;\r\nvar CubeWidth  = 0;\r\n\r\nlet ctx      = null;\r\nvar Vertices = null;\r\nvar Edges    = null;\r\n\r\nconst loop = (currentTime) =>{\r\n    if(ctx !== null){\r\n        DeltaTime = currentTime - LastTime;\r\n        LastTime = currentTime;\r\n\r\n        ctx.fillRect(0,0,CubeWidth,CubeHeight);\r\n\r\n        let angle = DeltaTime * 0.001 * Speed.x * Math.PI * 2;\r\n        for (let cubeVertice of Vertices){\r\n            let dx = cubeVertice.x - CubeX;\r\n            let dy = cubeVertice.y - CubeY;\r\n            let nx = dx * Math.cos(angle) - dy * Math.sin(angle);\r\n            let ny = dx * Math.sin(angle) + dy * Math.cos(angle);\r\n            cubeVertice.x = nx + CubeX;\r\n            cubeVertice.y = ny + CubeY;\r\n        }\r\n\r\n        angle = DeltaTime * 0.001 * Speed.y * Math.PI * 2;\r\n        for (let cubeVertice of Vertices){\r\n            let dy = cubeVertice.y - CubeY;\r\n            let dz = cubeVertice.z - CubeZ;\r\n            let ny = dy * Math.cos(angle) - dz * Math.sin(angle);\r\n            let nz = dy * Math.sin(angle) + dz * Math.cos(angle);\r\n            cubeVertice.y = ny + CubeY;\r\n            cubeVertice.z = nz + CubeZ;\r\n        }\r\n\r\n        angle = DeltaTime * 0.001 * Speed.z * Math.PI * 2;\r\n        for (let cubeVertice of Vertices){\r\n            let dx = cubeVertice.x - CubeX;\r\n            let dz = cubeVertice.z - CubeZ;\r\n            let nx = dx * Math.cos(angle) - dz * Math.sin(angle);\r\n            let nz = dx * Math.sin(angle) + dz * Math.cos(angle);\r\n            cubeVertice.x = nx + CubeX;\r\n            cubeVertice.z = nz + CubeZ;\r\n        }\r\n        \r\n        for(let edge of Edges){\r\n            ctx.beginPath();\r\n            ctx.moveTo(Vertices[edge[0]].x,Vertices[edge[0]].y);\r\n            ctx.lineTo(Vertices[edge[1]].x,Vertices[edge[1]].y);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    requestAnimationFrame(loop);\r\n}\r\n\r\nconst RotatingCube = () => {\r\n    const canvas = useRef();\r\n    if(DeltaTime == null) DeltaTime = 0;\r\n   \r\n    useEffect(() => {\r\n      const canvasEle = canvas.current;\r\n      canvasEle.width  = canvasEle.clientWidth;\r\n      canvasEle.height = canvasEle.clientHeight;\r\n\r\n      CubeHeight = canvasEle.height;\r\n      CubeWidth  = canvasEle.width;\r\n\r\n      CubeY = CubeHeight/2;\r\n      CubeX = CubeWidth/2;\r\n      CubeZ = 0;\r\n      CubeSize = CubeWidth / 6;\r\n\r\n      Vertices = [\r\n        Point3D(CubeX - CubeSize, CubeY - CubeSize, CubeZ - CubeSize ),\r\n        Point3D(CubeX + CubeSize, CubeY - CubeSize, CubeZ - CubeSize ),\r\n        Point3D(CubeX + CubeSize, CubeY + CubeSize, CubeZ - CubeSize ),\r\n        Point3D(CubeX - CubeSize, CubeY + CubeSize, CubeZ - CubeSize ),\r\n        Point3D(CubeX - CubeSize, CubeY - CubeSize, CubeZ + CubeSize ),\r\n        Point3D(CubeX + CubeSize, CubeY - CubeSize, CubeZ + CubeSize ),\r\n        Point3D(CubeX + CubeSize, CubeY + CubeSize, CubeZ + CubeSize ),\r\n        Point3D(CubeX - CubeSize, CubeY + CubeSize, CubeZ + CubeSize )\r\n      ];\r\n\r\n      Edges = [\r\n        [0,1],[1,2],[2,3],[3,0],\r\n        [4,5],[5,6],[6,7],[7,4],\r\n        [0,4],[1,5],[2,6],[3,7]\r\n      ];\r\n\r\n      ctx = canvasEle.getContext(\"2d\");\r\n      ctx.fillStyle = Pallete.background;\r\n      ctx.strokeStyle = Pallete.appYellow;\r\n      ctx.lineWidth = CubeWidth/100;\r\n      ctx.linecap = 'round';\r\n      \r\n      requestAnimationFrame(loop);\r\n    }, []);\r\n\r\n    return (\r\n        <canvas style={GetRotatingCubeStyle()} ref={canvas}></canvas>\r\n    );\r\n}\r\n\r\nexport default RotatingCube;","import React from 'react';\r\nimport RotatingCube from '../Components/RotatingCube/RotatingCube';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <RotatingCube/>\r\n            <div><span>Home page.</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Arts = () =>{\r\n    return (\r\n        <div>\r\n            <span>Arts page.</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Arts;","import React from 'react';\r\n\r\nconst Projects = () =>{\r\n    return (\r\n        <div>\r\n            <span>Projects page.</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <span> 404 not found </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Routes, Route } from 'react-router-dom';\nimport styles    from '../Styles/App.module.css';\nimport AppHeader from './Header/AppHeader';\nimport AppFooter from './Footer/AppFooter';\n\nimport Home     from '../Pages/Home';\nimport Arts     from '../Pages/Arts';\nimport Projects from '../Pages/Projects';\nimport NotFound from '../Pages/NotFound';\n\nconst App = () => {\n  return (\n    <div className={styles.App}>\n      <AppHeader />\n      <div className={styles.AppContainer}>\n        <Routes>\n          <Route path='/' exact   element={<Home/>} />\n          <Route path='/Home'     element={<Home/>} />\n          <Route path='/Projects' element={<Projects/>} />\n          <Route path='/Arts'     element={<Arts/>} />\n          \n          <Route path='/*'        element={<NotFound/>} />\n        </Routes>\n      </div>\n      <AppFooter />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './AppComponents/App';\nimport { BrowserRouter } from 'react-router-dom';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2ZMcB\",\"App\":\"App_App__2F-qR\",\"AppHeader\":\"App_AppHeader__3sJiJ\",\"AppContainer\":\"App_AppContainer__1QqJM\",\"AppFooter\":\"App_AppFooter__39HgF\"};"],"sourceRoot":""}